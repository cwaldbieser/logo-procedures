

to circle :radius
arc 360 :radius
end

to rectangle :w :h
repeat 2 [forward :w right 90 forward :h right 90]
end

to square :side
rectangle :side :side
end

to equalateral :side [:colors []]
localmake "start.pencolor pencolor
if [ emptyp :colors ] [
    localmake "color pencolor
    localmake "colors (list :color :color :color)
]
repeat 3 [
    setpencolor item # :colors 
    forward :side right 120
]
setpencolor :start.pencolor
end

to ellipse :center :r [:squash.x 1] [:squash.y 0.5] [:step 15]
make "h first :center       ; x coordinate of circle center
make "k last :center        ; y coordinate of circle center
pu
make "theta heading * -1 + 90
make "theta.start :theta
make "alpha :theta
make "x :h + :squash.x * :r * cos :theta
make "y :k - :squash.y * :r * sin :theta  
setpos rotate.coords :x :y :alpha
pd
do.until [
    make "theta :theta + :step
    make "x :h + :squash.x * :r * cos :theta
    make "y :k - :squash.y * :r * sin :theta  
    setpos rotate.coords :x :y :alpha
] [:theta - :theta.start >= 360]
end

to rotate.coords :x :y :theta
    make "x0 (:x * cos :theta) + (:y * sin :theta)
    make "y0 (:y * cos :theta) - (:x * sin :theta) 
    output (list :x0 :y0)
end

to colorsquare :side [:colors [1 2 3 5]]
localmake "half.side 0.5 * :side
localmake "ispendown pendownp
localmake "start.pos pos
localmake "start.heading heading
if :ispendown [pu]
back :half.side
left 90
forward :half.side
if :ispendown [pd]
foreach :colors [right 90 setpencolor ? forward :side]
if :ispendown [pu]
setpos :start.pos
setheading :start.heading
if :ispendown [pd]
end

to colorhex :side [:colors [1 2 3 4 5 6]]
repeat 6 [setpencolor item # :colors forward :side right 60]
end

to compose.shapes :shapes
(foreach :shapes [
    run ?
])
end

to star6 :side [:colors []]
print "START
localmake "half.side :side / 2
print [CHECKPOINT 1]
localmake "height sqrt :side * :side + :half.side * :half.side
localmake "height sqrt :side * :side + :half.side * :half.side
localmake "quarter.height :height / 4
if emptyp :colors [
    localmake "colors cascade 6 [ fput pencolor ? ] []
]
localmake "color.list (list slice :colors 1 4 slice :colors 4 7)
repeat 2 [
xlated [(equalateral :side item # :color.list)] (list :side / -2 -:quarter.height) 30
right 180
]
end
